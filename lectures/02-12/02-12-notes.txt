[02/12/2021]


command-line-args.c

                 char*                   Where is this allocated???
               +------+                   Generally on the runtime stack
  argv ---> [0]|  =======>"./a.out"        (see URL below...)
               +------+
            [1]|  =======>"abcd"         TO DO: Can argv[i] be modified?
               +------+
            [2]|  =======>"1234"                argv[1][2] = 'x';
               +------+
            [3]|  =======>"xyz"
               +------+
            [4]| NULL |
               +------+

-- argv[argc] will always be NULL pointer

  for ( i = 0 ; argv[i] != NULL ; i++ )
  {
    ...
  }


-- we can also look at the environment variables for
    the terminal associated with the running a.out executable

  for ( i = 0 ; environ[i] != NULL ; i++ )
  {
    ...
  }

  getenv()  <=== man getenv ======= man 7 environ

============================================================

size command reports the sizes in bytes of the segments:
 text (read-only machine instructions; share-able)
 data (initialized global data)
 bss (uninitialized global data, "block started by symbol")
       -- actually initialized to zero, int x[100];
 dec/hex -- total sizes

============================================================

rlimit.c example:

ulimit -a      <== getrlimit() and setrlimit()

  soft limit can be changed by any process to
   a value less than or equal to its hard limit
  
  hard limit can be lowered by any process to
   a value greater than or equal to its soft limit
    (irreversible)
  
  root user can raise a hard limit

============================================================

Processes terminate either "normally" or "abnormally"
-- normal -- return from main(), which calls exit()
-- normal -- exit() call -- ANSI C -- library function -- man 3 exit
-- normal -- _exit() call -- POSIX -- system call -- man _exit
-- abnormal -- terminated by a signal -- signals.c
-- abnormal -- abort() call -- man abort


